logging.level.root = WARN
logging.level.org.hshekhar = TRACE

# Kafka Configurations
spring.cloud.stream.kafka.binder.brokers=localhost:19092,localhost:19093

# Defaults
#spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms = 1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde = org.apache.kafka.common.serialization.Serdes$StringSerde

# page-visit-in
spring.cloud.stream.bindings.page-visit-in.destination = topic-pagevisits
spring.cloud.stream.bindings.page-visit-in.group = page-visit-in-group
spring.cloud.stream.bindings.page-visit-in.consumer.header-mode = headers
spring.cloud.stream.kafka.streams.bindings.page-visit-in.consumer.key-serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.page-visit-in.consumer.value-serde = org.hshekhar.kafka.model.PageVisitSerde

# page-visit-out-session
spring.cloud.stream.bindings.page-visit-out-session.destination = topic-sessions
spring.cloud.stream.bindings.page-visit-out-session.group = page-visit-out-session-group
spring.cloud.stream.bindings.page-visit-out-session.producer.header-mode = headers
spring.cloud.stream.kafka.streams.bindings.page-visit-out-session.producer.key-serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.page-visit-out-session.producer.value-serde = org.hshekhar.kafka.model.SessionStateSerde

# transaction-in
spring.cloud.stream.bindings.transaction-in.destination = topic-transactions
spring.cloud.stream.bindings.transaction-in.group = transaction-in-group
spring.cloud.stream.bindings.transaction-in.consumer.header-mode = headers
spring.cloud.stream.kafka.streams.bindings.transaction-in.consumer.key-serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.transaction-in.consumer.value-serde = org.hshekhar.kafka.model.TransactionSerde

# transaction-out-stock
spring.cloud.stream.bindings.transaction-out-stock.destination = topic-stocks
spring.cloud.stream.bindings.transaction-out-stock.group = transaction-out-stock-group
spring.cloud.stream.bindings.transaction-out-stock.producer.header-mode = headers
spring.cloud.stream.kafka.streams.bindings.transaction-out-stock.producer.key-serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.transaction-out-stock.producer.value-serde = org.hshekhar.kafka.model.StockSerde