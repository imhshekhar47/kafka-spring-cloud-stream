logging.level.root = INFO
logging.level.org.hshekhar = TRACE

# Kafka Configurations
spring.cloud.stream.kafka.binder.brokers=localhost:19092,localhost:19093

# Defaults
#spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms = 1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde = org.apache.kafka.common.serialization.Serdes$StringSerde

# page-visit-in
spring.cloud.stream.bindings.page-visit-in.destination = topic-pagevisits
spring.cloud.stream.bindings.page-visit-in.group = page-visit-in-group
spring.cloud.stream.bindings.page-visit-in.consumer.header-mode = headers
spring.cloud.stream.kafka.streams.bindings.page-visit-in.consumer.key-serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.page-visit-in.consumer.value-serde = org.hshekhar.kafka.model.PageVisitSerde

# page-visit-out-session
spring.cloud.stream.bindings.page-visit-out-session.destination = topic-sessions
spring.cloud.stream.bindings.page-visit-out-session.group = page-visit-out-session-group
spring.cloud.stream.bindings.page-visit-out-session.producer.header-mode = headers
spring.cloud.stream.kafka.streams.bindings.page-visit-out-session.producer.key-serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.page-visit-out-session.producer.value-serde = org.hshekhar.kafka.model.SessionStateSerde

## PAGE_VIEW_IN Channel(channel for USER_COUNT_OUT)
#spring.cloud.stream.bindings.pvinuc.destination = topic-pageviews
#spring.cloud.stream.bindings.pvinuc.consumer.header-mode = headers
#spring.cloud.stream.bindings.pvinuc.group = pvinuc-group
#spring.cloud.stream.kafka.streams.bindings.pvinuc.consumer.key-serde = org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.bindings.pvinuc.consumer.value-serde = org.hshekhar.kafka.serde.PageViewEventSerde
#
## USER_COUNT_OUT Channel
#spring.cloud.stream.bindings.ucout.destination = topic-usercount
#spring.cloud.stream.bindings.ucout.producer.header-mode = headers
#spring.cloud.stream.kafka.streams.bindings.ucout.producer.key-serde = org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.bindings.ucout.producer.value-serde = org.apache.kafka.common.serialization.Serdes$LongSerde
#
#
## PAGE_VIEW_IN Channel (channel for USER_TIMELOG_OUT)
#spring.cloud.stream.bindings.pvinutl.destination = topic-pageviews
#spring.cloud.stream.bindings.pvinutl.consumer.header-mode = headers
#spring.cloud.stream.bindings.pvinutl.group = pvinutl-group
#spring.cloud.stream.bindings.pvinutl.content-type = application/json
#spring.cloud.stream.kafka.streams.bindings.pvinutl.consumer.key-serde = org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.bindings.pvinutl.consumer.value-serde = org.hshekhar.kafka.serde.PageViewEventSerde
#
## USER_TIMELOG_OUT Channel
#spring.cloud.stream.bindings.utout.destination = topic-usertimelog
#spring.cloud.stream.bindings.utout.producer.header-mode = headers
#spring.cloud.stream.kafka.streams.bindings.utout.producer.key-serde = org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.bindings.utout.producer.value-serde = org.hshekhar.kafka.model.UserTimeLogSerde

