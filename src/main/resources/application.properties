spring.cloud.stream.kafka.binder.brokers=localhost:19092,localhost:19093

# default
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.mms = 1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde = org.apache.kafka.common.serialization.Serdes$StringSerde

# Page View Out - Writing to pv-topic
spring.cloud.stream.bindings.pvout.destination = pv-topic
spring.cloud.stream.bindings.pvout.producer.header-mode = none

# Page View In - Listening to pv-topic
spring.cloud.stream.bindings.pvin.destination = pv-topic
spring.cloud.stream.bindings.pvin.consumer.header-mode = none

# Page Count Out - Writing to pv-count-topic
spring.cloud.stream.bindings.pvcout.destination = pv-count-topic
spring.cloud.stream.bindings.pvcout.producer.use-native-encoding = true
spring.cloud.stream.kafka.streams.bindings.pvcout.producer.key-serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.pvcout.producer.value-serde = org.apache.kafka.common.serialization.Serdes$LongSerde

# Page Count In - Listening to pv-count-topic
spring.cloud.stream.bindings.pvcin.destination = pv-count-topic
spring.cloud.stream.bindings.pvcin.consumer.use-native-decoding = true
spring.cloud.stream.bindings.pvcin.group = pvcin-group
spring.cloud.stream.bindings.pvcin.content-type = application/json
spring.cloud.stream.bindings.pvcin.consumer.header-mode = none
spring.cloud.stream.kafka.streams.bindings.pvcin.consumer.key-serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.pvcin.consumer.value-serde = org.apache.kafka.common.serialization.Serdes$LongSerde